generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator zod {
  provider      = "zod-prisma"
  output        = "../../src/schemas"
  relationModel = true
  modelCase     = "camelCase"
  modelSuffix   = "Schema"
}

model Post {
  id        String   @id @default(uuid())
  title     String   @unique @db.VarChar(100)
  body      String   @db.Text
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp

  tags TagsOnPosts[]

  @@map("posts")
}

model Tag {
  id        String   @id @default(uuid())
  name      String   @unique @db.VarChar(20)
  colorCode String?  @map("color_code") @db.Char(6)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp

  posts TagsOnPosts[]

  @@map("tags")
}

model TagsOnPosts {
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String @map("post_id")
  tag    Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId  String @map("tag_id")

  @@id([postId, tagId])
  @@map("posts_tags")
}
