import { Controller, Post, Body, Get, Param } from '@nestjs/common'
import { ApiSecurity } from '@nestjs/swagger'
import { PaymentService } from './payment.service'
import { CreatePaymentDto, PaymentDto } from './dtos'
import { createStaticPix, hasError, parsePix } from 'pix-utils'

@Controller('payments')
@ApiSecurity('X-API-KEY')
export class PaymentController {
  constructor(private paymentService: PaymentService) {}

  @Post()
  async create(@Body() body: CreatePaymentDto) {
    const payment = new PaymentDto().from(await this.paymentService.create(body))

    const pix = createStaticPix({
      merchantName: 'ACME',
      merchantCity: 'SÃ£o Paulo, SP',
      infoAdicional: 'Generated by ACME',
      pixKey: '01479506192',
      txid: payment.id,
      transactionAmount: 1,
    })

    if (!hasError(pix)) {
      const pixResult = pix.toBRCode()

      console.log(pixResult)
      console.log(parsePix(pixResult))
    }

    return payment
  }

  @Get(':id')
  async getPayment(@Param('id') id: string) {
    return new PaymentDto().from(await this.paymentService.getById(id))
  }
}
